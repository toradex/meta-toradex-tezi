From 3bab6f86aab8fd846f5db7ac4522f8eb149e4a6a Mon Sep 17 00:00:00 2001
From: Han Xu <han.xu@nxp.com>
Date: Mon, 9 Dec 2019 15:32:31 -0600
Subject: [PATCH] MLK-11747: mtd: nand: raw: gpmi-nand: add the debugfs files
 for gpmi-nand for kobs-ng

add the debugfs files in gpmi-nand driver for kobs-ng

Upstream-Status: Inappropriate [TEZI specific]
Signed-off-by: Han Xu <han.xu@nxp.com>
(cherry picked from commit 99e0cd1cdcf64f9faa39e45c2e7ef116f2169ce1)

Forward port to v6.7
Signed-off-by: Max Krummenacher <max.krummenacher@toradex.com>

Forward port to v6.13:

- Make bch_create_debugfs static to prevent:
  warning: no previous prototype for 'bch_create_debugfs' [-Wmissing-prototypes]
- debugfs_create_file() was changed. Creating a zero lenght file is
  no longer possible easily. kobs uses the existence of the file or
  kernel version > 3.18 as a boolean. Drop creating the debugfs file
  and rely on the kernel version.
  https://github.com/nxp-imx/imx-kobs/blob/master/src/mtd.c#L848
- The include pinctl_consumer.h was added upstream. Keep it for now
  to be backwards compatible but move it so that we have less fuzz.

Signed-off-by: Max Krummenacher <max.krummenacher@toradex.com>
---
 drivers/mtd/nand/raw/gpmi-nand/gpmi-nand.c | 32 ++++++++++++++++++++++
 1 file changed, 32 insertions(+)

diff --git a/drivers/mtd/nand/raw/gpmi-nand/gpmi-nand.c b/drivers/mtd/nand/raw/gpmi-nand/gpmi-nand.c
index d76802944453..c94987c42bbf 100644
--- a/drivers/mtd/nand/raw/gpmi-nand/gpmi-nand.c
+++ b/drivers/mtd/nand/raw/gpmi-nand/gpmi-nand.c
@@ -6,6 +6,8 @@
  * Copyright (C) 2008 Embedded Alley Solutions, Inc.
  */
 #include <linux/clk.h>
+#include <linux/debugfs.h>
+#include <linux/pinctrl/consumer.h>
 #include <linux/delay.h>
 #include <linux/slab.h>
 #include <linux/sched/task_stack.h>
@@ -21,6 +23,9 @@
 #include "gpmi-regs.h"
 #include "bch-regs.h"
 
+/* export the bch geometry to dbgfs */
+static struct debugfs_blob_wrapper dbg_bch_geo;
+
 /* Resource names for the GPMI NAND driver. */
 #define GPMI_NAND_GPMI_REGS_ADDR_RES_NAME  "gpmi-nand"
 #define GPMI_NAND_BCH_REGS_ADDR_RES_NAME   "bch"
@@ -728,6 +733,28 @@ static int common_nfc_set_geometry(struct gpmi_nand_data *this)
 	return err;
 }
 
+static int bch_create_debugfs(struct gpmi_nand_data *this)
+{
+	struct bch_geometry *bch_geo = &this->bch_geometry;
+	struct dentry *dbg_root;
+
+	dbg_root = debugfs_create_dir("gpmi-nand", NULL);
+	if (!dbg_root) {
+		dev_err(this->dev, "failed to create debug directory\n");
+		return -EINVAL;
+	}
+
+	dbg_bch_geo.data = (void *)bch_geo;
+	dbg_bch_geo.size = sizeof(struct bch_geometry);
+	if (!debugfs_create_blob("bch_geometry", S_IRUGO,
+				dbg_root, &dbg_bch_geo)) {
+		dev_err(this->dev, "failed to create debug bch geometry\n");
+		return -EINVAL;
+	}
+
+	return 0;
+}
+
 /* Configures the geometry for BCH.  */
 static int bch_set_geometry(struct gpmi_nand_data *this)
 {
@@ -2279,6 +2306,11 @@ static int gpmi_init_last(struct gpmi_nand_data *this)
 	if (ret)
 		return ret;
 
+	/* Save the geometry to debugfs*/
+	ret = bch_create_debugfs(this);
+	if (ret)
+		return ret;
+
 	/* Init the nand_ecc_ctrl{} */
 	ecc->read_page	= gpmi_ecc_read_page;
 	ecc->write_page	= gpmi_ecc_write_page;
-- 
2.42.0

